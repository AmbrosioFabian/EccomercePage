@layout AuthLayout
@page "/signup"

@using EccomercePage.Api.Interfaces
@using EccomercePage.Data.DTO
@using EccomercePage.Data.Validations
@using EccomercePage.Routes.Redirects
@using FluentValidation
@using FluentValidation.Results
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager Navigation
@inject IAuthService AuthService
@inject IValidator<RegisterDTO> RegisterValidator

<AuthorizeView>
    <Authorized>
        <RedirectToHome />
    </Authorized>
    <NotAuthorized>
        <div style="display: flex; justify-content: center; align-items: center; min-height: 100vh; background: linear-gradient(170deg, #0a0000, #08113d, #0a0000);">
            <div style="width: 100%; max-width: 400px; padding: 2rem; border-radius: 8px;
                        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
                        background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px);">
                <h3 style="text-align: center; color: #fff; font-weight: bold; margin-bottom: 1.5rem;">Formulario para registrarse</h3>

                

                <!-- Formulario de registro -->
                <EditForm Model="@registerDTO" OnValidSubmit="HandleValidSubmit" Context="editFormContext">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div style="margin-bottom: 1.5rem;">
                        <InputText id="name" @bind-Value="registerDTO.UserName" placeholder="Nombre"
                                   style="width: 100%; padding: 0.75rem; border: none; border-radius: 5px; background: rgba(255, 255, 255, 0.2); color: #fff; font-size: 16px; outline: none;" />
                    </div>
                    <div style="margin-bottom: 1.5rem;">
                        <InputText id="email" @bind-Value="registerDTO.Email" placeholder="Correo electrónico"
                                   style="width: 100%; padding: 0.75rem; border: none; border-radius: 5px; background: rgba(255, 255, 255, 0.2); color: #fff; font-size: 16px; outline: none;" />
                    </div>
                    <div style="margin-bottom: 1.5rem;">
                        <InputText id="password" type="password" @bind-Value="registerDTO.Password" placeholder="Contraseña"
                                   style="width: 100%; padding: 0.75rem; border: none; border-radius: 5px; background: rgba(255, 255, 255, 0.2); color: #fff; font-size: 16px; outline: none;" />
                    </div>
                    <div style="margin-bottom: 1.5rem;">
                        <InputText id="confirmPassword" type="password" @bind-Value="registerDTO.ConfirmPassword" placeholder="Confirmar contraseña"
                                   style="width: 100%; padding: 0.75rem; border: none; border-radius: 5px; background: rgba(255, 255, 255, 0.2); color: #fff; font-size: 16px; outline: none;" />
                    </div>
                    <button type="submit" style="width: 100%; padding: 0.75rem; background-color: #0e1e6d; color: white; border: none; border-radius: 25px; font-weight: bold; cursor: pointer; transition: background 0.3s ease;">
                        Registrarse
                    </button>
                </EditForm>

                <!-- Mostrar errores de validación -->
                @if (validationErrors != null && validationErrors.Count > 0)
                {
                    <ul style="margin-top: 1rem; color: #ffdddd; list-style-type: none; padding: 0;">
                        @foreach (var error in validationErrors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                }

                <!-- Enlace para iniciar sesión -->
                <div style="text-align: center; margin-top: 1.5rem;">
                    <p style="color: #fff;">
                        ¿Ya tienes una cuenta?
                        <button @onclick="NavigateToLogin" style="background: none; border: none; color: #0e1e6d; cursor: pointer; text-decoration: underline;">Iniciar sesión</button>
                    </p>
                </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private RegisterDTO registerDTO = new RegisterDTO();
    private List<ValidationFailure> validationErrors = new List<ValidationFailure>();

    private async Task HandleValidSubmit()
    {
        validationErrors = new List<ValidationFailure>();

        var validationResult = await RegisterValidator.ValidateAsync(registerDTO);
        if (validationResult.IsValid)
        {
            var response = await AuthService.RegisterAsync(registerDTO);
            if (response.Success)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                // Manejar errores de registro
                foreach (var error in response.Errors)
                {
                    // Mostrar errores en la interfaz de usuario
                    validationErrors.Add(new ValidationFailure("", error));
                }
            }
        }
        else
        {
            validationErrors = validationResult.Errors;
        }
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}
