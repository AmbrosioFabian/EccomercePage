@using EccomercePage.Data.DTO.CartDTO

@code {
    [Parameter] public EventCallback<ChangeItemQuantityDTO> OnQuantityChanged { get; set; }

    [Parameter] public int ProductId { get; set; }
    [Parameter] public int CartItemId { get; set; }
    [Parameter] public string ImageSrc { get; set; } = "Sin información";
    [Parameter] public string ImageAlt { get; set; } = "Sin información";
    [Parameter] public string Name { get; set; } = "Sin información";
    [Parameter] public decimal TotalPrice { get; set; }
    [Parameter] public int Quantity { get; set; }
    [Parameter] public int ExistenceQuantity { get; set; }

    private string GetAvailabilityMessage()
    {
        if (ExistenceQuantity >= 11)
        {
            int availableInTens = (ExistenceQuantity / 10 - 1) * 10;
            return $"+{availableInTens} disponibles";
        }
        return $"{ExistenceQuantity} disponibles";
    }

    private async Task ChangeQuantity(ChangeAction action)
    {
        if ((action == ChangeAction.increase_quantity && Quantity >= ExistenceQuantity) ||
            (action == ChangeAction.decrease_quantity && Quantity <= 1))
        {
            return;
        }

        // Invoca el callback para informar al padre
        await OnQuantityChanged.InvokeAsync(new ChangeItemQuantityDTO
            {
                ItemId = CartItemId,
                Quantity = Quantity,
                Action = action
            });
    }
}

<div class="flex flex-row items-center justify-between">
    <img src="@ImageSrc" alt="@ImageAlt" class="aspect-[1/1] max-h-16 max-w-16" />
    <a>
        <span>@Name</span>
    </a>
    <div>
        <div class="flex max-w-full justify-around">
            <button @onclick="() => ChangeQuantity(ChangeAction.decrease_quantity)">-</button>
            <span>@Quantity</span>
            <button @onclick="() => ChangeQuantity(ChangeAction.increase_quantity)">+</button>
        </div>
        <span>@GetAvailabilityMessage()</span>
    </div>
    <span>S/ @TotalPrice</span>
</div>
